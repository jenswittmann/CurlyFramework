// css grid
@mixin grid {
    display: grid;
    grid-template-columns: repeat($grid-cols - 2, 1fr);
    column-gap: $grid-gap;
    row-gap: $grid-gap-row;
}

@mixin grid-large {
    grid-template-columns: repeat($grid-cols, 1fr);
    column-gap: $grid-gap-large;
    row-gap: $grid-gap-row-large;
}

.grid {
    @include grid;

    @media #{$breakpoint-not-small} {
        @include grid-large;
    }

    @media #{$breakpoint-not-small} {
        &-ns {
            @include grid;
            @include grid-large;
        }
    }

    &-subgrid {
        @include grid;

        @media #{$breakpoint-not-small} {
            @include grid-large;
        }
    }

    &-gap {
        column-gap: $grid-gap;
        row-gap: $grid-gap-row;

        @media #{$breakpoint-not-small} {
            column-gap: $grid-gap-large;
            row-gap: $grid-gap-row-large;
        }
    }

    &__place {
        &--content {
            grid-column: 1/ -1;

            @media #{$breakpoint-not-small} {
                grid-column: 2 / -2;
            }
        }

        &--fullwidth {
            grid-column: 1 / -1;
        }
    }

    &__item--end {
        grid-column-end: -1;
    }

    @for $i from 1 through $grid-cols {
        &__item--start-#{$i} {
            grid-column-start: $i;
        }

        &__item--end-#{$i} {
            grid-column-end: $i + 1;
        }

        &__item--col-span-#{$i} {
            grid-column-end: span $i;
        }

        &__item--row-span-#{$i} {
            grid-row-end: span $i;
        }
    }

    &__item--end-ns {
        grid-column-end: -1;
    }

    @for $i from 1 through $grid-cols {
        @media #{$breakpoint-not-small} {
            &__item--start-#{$i}-ns {
                grid-column-start: $i;
            }

            &__item--end-#{$i}-ns {
                grid-column-end: $i + 1;
            }

            &__item--col-span-#{$i}-ns {
                grid-column-end: span $i;
            }

            &__item--row-span-#{$i}-ns {
                grid-row-end: span $i;
            }
        }
    }
}

.grid-auto-flow-column {
    grid-auto-flow: column;
}
